@model Dostigator.Models.RegisterModel

@{
    ViewBag.Title = "Register";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
	<div class="container">
		<section>
			<div class="row">
				<div id="test3" class="col s12 m7">
					<div class="card large">
						<div class="card-content" style="max-height: 100%;">
							<h5 class="header h2">Регистрация</h5>
							@Html.ValidationSummary(true, "", new { @class = "red-text" })
							<div class="row">
								<form class="col s12">
									<div class="row">
										<div class="input-field col s6">
											<!--<input id="first_name" type="text" class="validate">
											<label for="first_name">Имя</label>-->
											@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "validate" } })
											@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "" })
											@Html.ValidationMessageFor(model => model.Name, "", new { @class = "red-text" })
										</div>
										<div class="input-field col s6">
											<!--<input id="last_name" type="text" class="validate">
											<label for="last_name">Фамилия</label>-->
											@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "validate" } })
											@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "" })
											@Html.ValidationMessageFor(model => model.Password, "", new { @class = "red-text" })
										</div>
									</div>
									<div class="row">
										<div class="input-field col s12">
											<!--<input id="password" type="password" class="validate">
											<label for="password">Пароль</label>-->
											@Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "validate" } })
											@Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "" })
											@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "red-text" })
										</div>
									</div>
									<div class="row">
										<div class="input-field col s12">
											<!--<input id="email" type="email" class="validate">
											<label for="email">Email</label>-->
											@Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "validate" } })
											@Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "" })
											@Html.ValidationMessageFor(model => model.Age, "", new { @class = "red-text" })
										</div>
									</div>
								</form>
							</div>
						</div>
						<div class="card-action center">							
                            <input type="submit" value="Регистрация" class="btn-large waves-effect waves-light blue lighten-1" />
						</div>
					</div>
				</div>
			</div>
		</section>
	</div>





   <!-- <div class="form-horizontal">
        <h4>RegisterModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "red-text" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "red-text" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "red-text" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "red-text" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "red-text" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>-->
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
